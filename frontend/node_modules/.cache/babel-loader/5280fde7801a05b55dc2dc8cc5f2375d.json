{"ast":null,"code":"var _jsxFileName = \"/Users/justyna/Desktop/frontend/src/components/EditMedicineModal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nexport default class EditMedicineModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      const activeItem = { ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \" Medicine \"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.activeItem.name,\n      onChange: this.handleChange,\n      placeholder: \"Enter medicine name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      check: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      name: \"price\",\n      value: this.state.activeItem.age,\n      onChange: this.handleChange,\n      placeholder: \"Enter medicine price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: () => onSave(this.state.activeItem),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/justyna/Desktop/frontend/src/components/EditMedicineModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","EditMedicineModal","constructor","props","handleChange","e","name","value","target","type","checked","activeItem","state","setState","render","toggle","onSave","age"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from \"reactstrap\";\n\nexport default class EditMedicineModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem\n        };\n    }\n    handleChange = e => {\n        let { name, value } = e.target;\n        if (e.target.type === \"checkbox\") {\n            value = e.target.checked;\n        }\n        const activeItem = { ...this.state.activeItem, [name]: value };\n        this.setState({ activeItem });\n    };\n    render() {\n        const { toggle, onSave } = this.props;\n        return (\n            <Modal isOpen={true} toggle={toggle}>\n                <ModalHeader toggle={toggle}> Medicine </ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"name\">Name</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"name\"\n                                value={this.state.activeItem.name}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter medicine name\"\n                            />\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label for=\"age\"></Label>\n                            <Input\n                                type=\"number\"\n                                name=\"price\"\n                                value={this.state.activeItem.age}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter medicine price\"\n                            />\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n                        Save\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}