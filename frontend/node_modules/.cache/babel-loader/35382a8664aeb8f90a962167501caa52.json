{"ast":null,"code":"var _jsxFileName = \"/Users/justyna/Desktop/apkaTest/frontend/src/components/AddMedicineOrder.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nclass AddMedicineOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onCustomerSearchChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      const customerSearchValue = {\n        [name]: value\n      };\n      this.setState({\n        customerSearchValue\n      });\n    };\n\n    this.onCustomerSearchSubmit = () => {\n      let customerSearchValue = this.state.customerSearchValue;\n\n      if (customerSearchValue) {\n        axios.get(`customers/?pesel=${customerSearchValue['pesel']}`, customerSearchValue).then(res => this.setState({\n          customersList: res.data\n        })).catch(err => console.log(err));\n      }\n    };\n\n    this.onCustomerSelect = item => {\n      this.setState(prevState => ({\n        orderItems: [...prevState.orderItems, {\n          medicine: \"\",\n          amount: null\n        }]\n      }));\n      this.setState({\n        customer: item\n      });\n    };\n\n    this.renderCustomers = () => {\n      const customersList = this.state.customersList;\n      return customersList.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => this.onCustomerSelect(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, item.name, \" \", item.surname, \" \", item.pesel)));\n    };\n\n    this.addOrderItem = e => {\n      this.setState(prevState => ({\n        orderItems: [...prevState.orderItems, {\n          medicine: \"\",\n          amount: null\n        }]\n      }));\n    };\n\n    this.onNewMedicineOrder = e => {\n      let {\n        customer,\n        orderItems\n      } = this.state;\n      let newOrder = {\n        customer: customer,\n        orderItems: orderItems\n      };\n      console.log(newOrder);\n    };\n\n    this.onOrderItemChange = e => {\n      let orderItems = [...this.state.orderItems];\n      let item = { ...orderItems[e.target.dataset.id]\n      };\n      item[e.target.name] = e.target.value;\n      orderItems[e.target.dataset.id] = item;\n      this.setState({\n        orderItems\n      });\n    };\n\n    this.state = {\n      customer: {\n        id: null,\n        name: \"\",\n        surname: \"\",\n        pesel: null,\n        age: null\n      },\n      orderItems: [{\n        medicine: \"\",\n        amount: null\n      }],\n      customerSearchValue: {},\n      customersList: []\n    };\n    this.onCustomerSearchChange = this.onCustomerSearchChange.bind(this);\n    this.onOrderItemChange = this.onOrderItemChange.bind(this);\n  }\n\n  render() {\n    let orderItems = this.state.orderItems;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Dodaj nowe zam\\xF3wienie\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Podsumowanie:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Customer: \", this.state.customer.pesel, \" \", this.state.customer.name, \" \", this.state.customer.surname), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"pesel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, \"Search customer\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"pesel\",\n      value: this.state.customerSearchValue.pesel,\n      onChange: this.onCustomerSearchChange,\n      placeholder: \"Enter customer pesel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.onCustomerSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"Results:\"), this.renderCustomers()), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.addOrderItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"Add another medicine\"), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, orderItems.map((val, idx) => {\n      let medicineId = `medicine${idx}`,\n          amountId = `amount${idx}`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: medicineId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 45\n        }\n      }, `Medicine #${idx + 1}`), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"medicine\",\n        \"data-id\": idx,\n        id: medicineId,\n        value: orderItems[idx].medicine,\n        onChange: this.onOrderItemChange,\n        placeholder: \"Enter medicine id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        for: amountId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 45\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"amount\",\n        \"data-id\": idx,\n        id: amountId,\n        value: orderItems[idx].amount,\n        onChange: this.onOrderItemChange,\n        placeholder: \"Enter medicine amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 45\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onNewMedicineOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default AddMedicineOrder;","map":{"version":3,"sources":["/Users/justyna/Desktop/apkaTest/frontend/src/components/AddMedicineOrder.js"],"names":["React","Component","axios","Button","Form","FormGroup","Input","Label","AddMedicineOrder","constructor","props","onCustomerSearchChange","e","name","value","target","customerSearchValue","setState","onCustomerSearchSubmit","state","get","then","res","customersList","data","catch","err","console","log","onCustomerSelect","item","prevState","orderItems","medicine","amount","customer","renderCustomers","map","id","surname","pesel","addOrderItem","onNewMedicineOrder","newOrder","onOrderItemChange","dataset","age","bind","render","val","idx","medicineId","amountId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Button, Form, FormGroup, Input, Label} from \"reactstrap\";\n\n\n\nclass AddMedicineOrder extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            customer: {\n                id: null,\n                name: \"\",\n                surname: \"\",\n                pesel: null,\n                age: null\n            },\n            orderItems: [{ medicine: \"\", amount: null}],\n            customerSearchValue: {},\n            customersList: []\n        };\n        this.onCustomerSearchChange = this.onCustomerSearchChange.bind(this);\n        this.onOrderItemChange = this.onOrderItemChange.bind(this);\n    };\n\n    onCustomerSearchChange = e => {\n        let { name, value } = e.target;\n        const customerSearchValue = { [name]: value };\n        this.setState({ customerSearchValue });\n    };\n\n    onCustomerSearchSubmit = () => {\n        let customerSearchValue = this.state.customerSearchValue;\n        if (customerSearchValue) {\n            axios\n                .get(`customers/?pesel=${customerSearchValue['pesel']}`, customerSearchValue)\n                .then(res => this.setState({ customersList: res.data }))\n                .catch(err => console.log(err));\n        }\n    };\n\n    onCustomerSelect = item => {\n        this.setState((prevState) => ({\n            orderItems: [...prevState.orderItems, {medicine: \"\", amount: null}],\n        }));\n        this.setState({customer: item});\n    };\n\n\n\n    renderCustomers = () => {\n        const customersList = this.state.customersList;\n        return customersList.map(item => (\n            <li key={item.id}>\n                <button onClick={(e) => this.onCustomerSelect(item)}>\n                    {item.name} {item.surname} {item.pesel}\n                </button>\n            </li>\n        ));\n    };\n\n    addOrderItem = (e) => {\n        this.setState((prevState) => ({\n            orderItems: [...prevState.orderItems, {medicine: \"\", amount: null}],\n        }));\n    };\n\n    onNewMedicineOrder = (e) => {\n        let {customer, orderItems} = this.state;\n        let newOrder = {customer: customer, orderItems: orderItems};\n        console.log(newOrder);\n    };\n\n    onOrderItemChange = (e) => {\n        let orderItems = [...this.state.orderItems];\n        let item = {...orderItems[e.target.dataset.id]};\n        item[e.target.name]= e.target.value;\n        orderItems[e.target.dataset.id] = item;\n        this.setState( {orderItems});\n    };\n\n    render () {\n        let orderItems = this.state.orderItems;\n        return (\n            <div>\n                <h3>\n                    Dodaj nowe zamówienie\n                </h3>\n                <h6>\n                    Podsumowanie:\n                </h6>\n                <p>\n                    Customer: {this.state.customer.pesel} {this.state.customer.name} {this.state.customer.surname}\n                </p>\n                <span>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"pesel\">Search customer</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"pesel\"\n                                value={this.state.customerSearchValue.pesel}\n                                onChange={this.onCustomerSearchChange}\n                                placeholder=\"Enter customer pesel\"\n                            />\n                        </FormGroup>\n                        <Button color=\"primary\" onClick={this.onCustomerSearchSubmit}>\n                            Search\n                        </Button>\n                        <div>\n                            <h6>Results:</h6>\n                            {this.renderCustomers()}\n                        </div>\n                        <Button onClick={this.addOrderItem}>\n                                Add another medicine\n                        </Button>\n                        <FormGroup>\n                            {\n                                orderItems.map( (val, idx) => {\n                                    let medicineId = `medicine${idx}`, amountId = `amount${idx}`;\n                                    return (\n                                        <div key={idx}>\n                                            <Label for={medicineId}>{`Medicine #${idx + 1}`}</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"medicine\"\n                                                data-id={idx}\n                                                id={medicineId}\n                                                value={orderItems[idx].medicine}\n                                                onChange={this.onOrderItemChange}\n                                                placeholder=\"Enter medicine id\"\n                                            />\n                                            <Label for={amountId}>Amount</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"amount\"\n                                                data-id={idx}\n                                                id={amountId}\n                                                value={orderItems[idx].amount}\n                                                onChange={this.onOrderItemChange}\n                                                placeholder=\"Enter medicine amount\"\n                                            />\n                                        </div>\n                                    )\n                                })\n                            }\n                        </FormGroup>\n                        <Button onClick={this.onNewMedicineOrder}>\n                            Submit\n                        </Button>\n                    </Form>\n                </span>\n                <span>\n\n                </span>\n            </div>\n        );\n    }\n\n}\n\nexport default AddMedicineOrder;"]},"metadata":{},"sourceType":"module"}