{"ast":null,"code":"var _jsxFileName = \"/Users/justyna/Desktop/apkaTest/frontend/src/components/MedicineOrder/AddMedicineOrder.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nclass AddMedicineOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onCustomerSearchChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      const customerSearchValue = {\n        [name]: value\n      };\n      this.setState({\n        customerSearchValue\n      });\n    };\n\n    this.onCustomerChange = e => {\n      let customer = e.target.value;\n      this.setState({\n        activeCustomer: customer\n      });\n    };\n\n    this.onCustomerSearchSubmit = () => {\n      let customerSearchValue = this.state.customerSearchValue;\n\n      if (customerSearchValue) {\n        axios.get(`customers/?pesel=${customerSearchValue['pesel']}`, customerSearchValue).then(res => this.setState({\n          customersList: res.data\n        })).catch(err => console.log(err));\n      }\n    };\n\n    this.renderCustomers = () => {\n      const customersList = this.state.customersList;\n      return customersList.map(customer => /*#__PURE__*/React.createElement(\"option\", {\n        value: customer.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, customer.id, \" \", customer.name, \" \", customer.surname, \" \", customer.pesel));\n    };\n\n    this.addOrderItem = e => {\n      this.setState(prevState => ({\n        orderItems: [...prevState.orderItems, {\n          medicine: \"\",\n          amount: null\n        }]\n      }));\n    };\n\n    this.onMedicineOrderSubmit = e => {\n      let {\n        activeCustomer,\n        orderItems\n      } = this.state;\n      let newOrder = {\n        customer: activeCustomer,\n        medicineOrderItems: orderItems\n      };\n      console.log(newOrder);\n      axios.post(\"medicineOrders/\", newOrder).then(res => console.log(res)).catch(err => console.log(err));\n    };\n\n    this.onOrderItemChange = e => {\n      let orderItems = [...this.state.orderItems];\n      let item = { ...orderItems[e.target.dataset.id]\n      };\n      item[e.target.name] = e.target.value;\n      orderItems[e.target.dataset.id] = item;\n      this.setState({\n        orderItems\n      });\n    };\n\n    this.state = {\n      customer: {\n        id: null,\n        name: \"\",\n        surname: \"\",\n        pesel: null,\n        age: null\n      },\n      medicineSearchValues: [],\n      orderItems: [{\n        medicine: \"\",\n        amount: null\n      }],\n      customerSearchValue: {},\n      activeCustomer: null,\n      customersList: []\n    };\n    this.onCustomerSearchChange = this.onCustomerSearchChange.bind(this);\n    this.onCustomerChange = this.onCustomerChange.bind(this);\n    this.onOrderItemChange = this.onOrderItemChange.bind(this);\n  }\n\n  render() {\n    let orderItems = this.state.orderItems;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Dodaj nowe zam\\xF3wienie\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"pesel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, \"Search customer by pesel\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.onCustomerSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"pesel\",\n      value: this.state.customerSearchValue.pesel,\n      onChange: this.onCustomerSearchChange,\n      placeholder: \"Enter pesel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"customer\",\n      value: this.state.activeCustomer,\n      onChange: this.onCustomerChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, this.renderCustomers())), /*#__PURE__*/React.createElement(\"wbr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.addOrderItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 28\n      }\n    }, \"Add another medicine\")), /*#__PURE__*/React.createElement(\"abbr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, orderItems.map((val, idx) => {\n      let medicineSearchId = `medicineSearch${idx}`,\n          medicineId = `medicine${idx}`,\n          amountId = `amount${idx}`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 45\n        }\n      }, `Order item #${idx + 1}`), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 45\n        }\n      }, \"Search\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"medicineSearch\",\n        \"data-id\": idx,\n        id: medicineSearchId,\n        placeholder: \"Enter medicine name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        for: medicineId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 45\n        }\n      }, \"Medicine\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"medicine\",\n        \"data-id\": idx,\n        id: medicineId,\n        value: orderItems[idx].medicine,\n        onChange: this.onOrderItemChange,\n        placeholder: \"Enter medicine id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        for: amountId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 45\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"amount\",\n        \"data-id\": idx,\n        id: amountId,\n        value: orderItems[idx].amount,\n        onChange: this.onOrderItemChange,\n        placeholder: \"Enter medicine amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 45\n        }\n      }));\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Podsumowanie\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, \"Customer: \", this.state.activeCustomer ? this.state.activeCustomer : null)), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onMedicineOrderSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default AddMedicineOrder;","map":{"version":3,"sources":["/Users/justyna/Desktop/apkaTest/frontend/src/components/MedicineOrder/AddMedicineOrder.js"],"names":["React","Component","axios","Button","Form","FormGroup","Input","Label","AddMedicineOrder","constructor","props","onCustomerSearchChange","e","name","value","target","customerSearchValue","setState","onCustomerChange","customer","activeCustomer","onCustomerSearchSubmit","state","get","then","res","customersList","data","catch","err","console","log","renderCustomers","map","id","surname","pesel","addOrderItem","prevState","orderItems","medicine","amount","onMedicineOrderSubmit","newOrder","medicineOrderItems","post","onOrderItemChange","item","dataset","age","medicineSearchValues","bind","render","val","idx","medicineSearchId","medicineId","amountId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Button, Form, FormGroup, Input, Label} from \"reactstrap\";\n\n\n\nclass AddMedicineOrder extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            customer: {\n                id: null,\n                name: \"\",\n                surname: \"\",\n                pesel: null,\n                age: null\n            },\n            medicineSearchValues: [],\n            orderItems: [{ medicine: \"\", amount: null}],\n            customerSearchValue: {},\n            activeCustomer: null,\n            customersList: []\n        };\n        this.onCustomerSearchChange = this.onCustomerSearchChange.bind(this);\n        this.onCustomerChange = this.onCustomerChange.bind(this);\n        this.onOrderItemChange = this.onOrderItemChange.bind(this);\n    };\n\n    onCustomerSearchChange = e => {\n        let { name, value } = e.target;\n        const customerSearchValue = { [name]: value };\n        this.setState({ customerSearchValue });\n    };\n\n\n    onCustomerChange = e => {\n        let customer = e.target.value;\n        this.setState({activeCustomer: customer});\n    };\n\n    onCustomerSearchSubmit = () => {\n        let customerSearchValue = this.state.customerSearchValue;\n        if (customerSearchValue) {\n            axios\n                .get(`customers/?pesel=${customerSearchValue['pesel']}`, customerSearchValue)\n                .then(res => this.setState({ customersList: res.data }))\n                .catch(err => console.log(err));\n        }\n    };\n\n\n    renderCustomers = () => {\n        const customersList = this.state.customersList;\n        return customersList.map(customer => (\n            <option value={customer.id}>\n                {customer.id} {customer.name} {customer.surname} {customer.pesel}\n            </option>\n        ));\n    };\n\n    addOrderItem = (e) => {\n        this.setState((prevState) => ({\n            orderItems: [...prevState.orderItems, {medicine: \"\", amount: null}],\n        }));\n    };\n\n    onMedicineOrderSubmit = (e) => {\n        let {activeCustomer, orderItems} = this.state;\n        let newOrder = {customer: activeCustomer, medicineOrderItems: orderItems};\n        console.log(newOrder);\n        axios\n            .post(\"medicineOrders/\", newOrder)\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n    };\n\n    onOrderItemChange = (e) => {\n        let orderItems = [...this.state.orderItems];\n        let item = {...orderItems[e.target.dataset.id]};\n        item[e.target.name]= e.target.value;\n        orderItems[e.target.dataset.id] = item;\n        this.setState( {orderItems});\n    };\n\n    render () {\n        let orderItems = this.state.orderItems;\n        return (\n            <div>\n                <h3>\n                    Dodaj nowe zamówienie\n                </h3>\n                <span>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"pesel\">Search customer by pesel</Label>\n                            <Button color=\"primary\" onClick={this.onCustomerSearchSubmit}>Search</Button>\n                            <Input\n                                type=\"text\"\n                                name=\"pesel\"\n                                value={this.state.customerSearchValue.pesel}\n                                onChange={this.onCustomerSearchChange}\n                                placeholder=\"Enter pesel\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"customer\">Customer</Label>\n                            <Input\n                                type=\"select\"\n                                name=\"customer\"\n                                value={this.state.activeCustomer}\n                                onChange={this.onCustomerChange}\n                            >\n                                {this.renderCustomers()}\n                            </Input>\n                        </FormGroup>\n                        <wbr/>\n                        <div>\n                           <Button onClick={this.addOrderItem}>\n                                Add another medicine\n                            </Button>\n                        </div>\n                        <abbr/>\n                        <FormGroup>\n                            {\n                                orderItems.map( (val, idx) => {\n                                    let medicineSearchId = `medicineSearch${idx}`,medicineId = `medicine${idx}`, amountId = `amount${idx}`;\n                                    return (\n                                        <div key={idx}>\n                                            <Label>{`Order item #${idx + 1}`}</Label>\n                                            <Button color=\"primary\" >Search</Button>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"medicineSearch\"\n                                                data-id={idx}\n                                                id={medicineSearchId}\n\n\n                                                placeholder=\"Enter medicine name\"\n                                            />\n                                            <br/>\n                                            <Label for={medicineId}>Medicine</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"medicine\"\n                                                data-id={idx}\n                                                id={medicineId}\n                                                value={orderItems[idx].medicine}\n                                                onChange={this.onOrderItemChange}\n                                                placeholder=\"Enter medicine id\"\n                                            />\n                                            <Label for={amountId}>Amount</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"amount\"\n                                                data-id={idx}\n                                                id={amountId}\n                                                value={orderItems[idx].amount}\n                                                onChange={this.onOrderItemChange}\n                                                placeholder=\"Enter medicine amount\"\n                                            />\n                                        </div>\n                                    )\n                                })\n                            }\n                        </FormGroup>\n                    </Form>\n                </span>\n                <span>\n                    <h4>\n                        Podsumowanie\n                    </h4>\n                    <p>\n                        Customer: {this.state.activeCustomer ? this.state.activeCustomer : null}\n                    </p>\n                </span>\n                <Button onClick={this.onMedicineOrderSubmit}>\n                    Submit\n                </Button>\n            </div>\n        );\n    }\n\n}\n\nexport default AddMedicineOrder;"]},"metadata":{},"sourceType":"module"}