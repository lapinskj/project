{"ast":null,"code":"var _jsxFileName = \"/Users/justyna/Desktop/apkaTest/frontend/src/components/MedicineOrder/MedicineOrder.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport UpdateOrderStatusModal from \"./UpdateOrderStatusModal\";\nimport { Button, Input } from \"reactstrap\";\n\nclass MedicineOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleStatusUpdate = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleStatusSubmit = item => {\n      this.toggle();\n      axios.put(`/medicineOrders/${item.id}/updateStatus/`, item).then(res => this.getMedicineOrder());\n    };\n\n    this.handleDelete = item => {\n      axios.delete(`/medicineOrderItem/${item.id}`).then(res => this.getMedicineOrder());\n    };\n\n    this.onMedicineSearchChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      const medicineSearchValue = {\n        [name]: value\n      };\n      this.setState({\n        medicineSearchValue\n      });\n    };\n\n    this.onMedicineSearchSubmit = () => {\n      let medicineSearchValue = this.state.medicineSearchValue;\n\n      if (medicineSearchValue) {\n        axios.get(`/medicines/?name=${medicineSearchValue['name']}`, medicineSearchValue).then(res => {\n          this.setState({\n            medicinesList: res.data\n          });\n          this.setState({\n            activeMedicine: res.data[0].id\n          });\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.renderOrder = () => {\n      const medicineOrder = this.state.medicineOrder;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.handleStatusUpdate(medicineOrder),\n        className: \"btn btn-light ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, \" Update status \"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, \"Zam\\xF3wienie nr \", medicineOrder.id), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, \"Data: \", medicineOrder.created), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"Klient: \", medicineOrder.customer.pesel, \" \", medicineOrder.customer.name, \" \", medicineOrder.customer.surname), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"Kwota: \", medicineOrder.total_price), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, \"Status: \", medicineOrder.orderStatus), medicineOrder.medicineOrderItems.map(orderitem => /*#__PURE__*/React.createElement(\"span\", {\n        key: orderitem.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, orderitem.medicine.name, \" \", orderitem.medicine.price, \" x \", orderitem.amount), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.handleDelete(orderitem),\n        className: \"btn btn-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, \" Delete \"))), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, \"Dodaj nowy element zam\\xF3wienia\"), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.onMedicineSearchSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, \"Search\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.medicineSearchValue,\n        onChange: this.onMedicineSearchChange,\n        placeholder: \"Enter medicine name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      })), this.state.modal ? /*#__PURE__*/React.createElement(UpdateOrderStatusModal, {\n        activeItem: this.state.activeItem,\n        choices: this.state.updateChoices,\n        toggle: this.toggle,\n        onStatusSave: this.handleStatusSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }) : null);\n    };\n\n    this.state = {\n      modal: false,\n      medicineOrder: null,\n      updateChoices: {},\n      activeItem: {},\n      medicineSearchValue: {},\n      medicinesList: [],\n      activeMedicine: null\n    };\n  }\n\n  getMedicineOrder() {\n    let id = this.props.match.params.id;\n    axios.get(`/medicineOrders/${id}/`).then(res => this.setState({\n      medicineOrder: res.data\n    })).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.getMedicineOrder();\n    axios.options(\"/medicineOrders/\").then(res => this.setState({\n      updateChoices: res.data.actions['POST']['orderStatus'].choices\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, this.state.medicineOrder ? this.renderOrder() : null);\n  }\n\n}\n\nexport default MedicineOrder;","map":{"version":3,"sources":["/Users/justyna/Desktop/apkaTest/frontend/src/components/MedicineOrder/MedicineOrder.js"],"names":["React","Component","axios","UpdateOrderStatusModal","Button","Input","MedicineOrder","constructor","props","toggle","setState","modal","state","handleStatusUpdate","item","activeItem","handleStatusSubmit","put","id","then","res","getMedicineOrder","handleDelete","delete","onMedicineSearchChange","e","name","value","target","medicineSearchValue","onMedicineSearchSubmit","get","medicinesList","data","activeMedicine","catch","err","console","log","renderOrder","medicineOrder","created","customer","pesel","surname","total_price","orderStatus","medicineOrderItems","map","orderitem","medicine","price","amount","updateChoices","match","params","componentDidMount","options","actions","choices","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport UpdateOrderStatusModal from \"./UpdateOrderStatusModal\";\nimport {Button, Input} from \"reactstrap\";\n\nclass MedicineOrder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false,\n            medicineOrder: null,\n            updateChoices: {},\n            activeItem: {},\n            medicineSearchValue: {},\n            medicinesList: [],\n            activeMedicine: null\n\n        };\n    }\n\n    toggle = () => {\n        this.setState({ modal: !this.state.modal });\n    };\n\n    handleStatusUpdate = item => {\n        this.setState({ activeItem: item, modal: !this.state.modal });\n    };\n\n    handleStatusSubmit = item => {\n        this.toggle();\n        axios\n            .put(`/medicineOrders/${item.id}/updateStatus/`, item)\n            .then(res => this.getMedicineOrder());\n    };\n\n    handleDelete = item => {\n        axios\n            .delete(`/medicineOrderItem/${item.id}`)\n            .then(res => this.getMedicineOrder());\n    };\n\n    onMedicineSearchChange = e => {\n        let { name, value } = e.target;\n        const medicineSearchValue = { [name]: value };\n        this.setState({ medicineSearchValue });\n    };\n\n    onMedicineSearchSubmit = () => {\n        let medicineSearchValue = this.state.medicineSearchValue;\n        if (medicineSearchValue) {\n            axios\n                .get(`/medicines/?name=${medicineSearchValue['name']}`, medicineSearchValue)\n                .then(res => {\n                    this.setState({ medicinesList: res.data });\n                    this.setState({activeMedicine: res.data[0].id});\n                })\n                .catch(err => console.log(err));\n        }\n    };\n\n    getMedicineOrder () {\n        let id = this.props.match.params.id;\n        axios\n            .get(`/medicineOrders/${id}/`)\n            .then(res => this.setState({medicineOrder: res.data}))\n            .catch(err => console.log(err));\n    }\n\n    componentDidMount() {\n        this.getMedicineOrder();\n        axios\n            .options(\"/medicineOrders/\")\n            .then(res => this.setState({updateChoices: res.data.actions['POST']['orderStatus'].choices}));\n    }\n\n    renderOrder = () => {\n        const medicineOrder = this.state.medicineOrder;\n        return (\n            <div>\n                <button onClick={() => this.handleStatusUpdate(medicineOrder)} className=\"btn btn-light ml-2\"> Update status </button>\n                <h3>Zamówienie nr {medicineOrder.id}</h3>\n                <p>\n                    Data: {medicineOrder.created}\n                </p>\n                <p>\n                    Klient: {medicineOrder.customer.pesel} {medicineOrder.customer.name} {medicineOrder.customer.surname}\n                </p>\n                <p>\n                    Kwota: {medicineOrder.total_price}\n                </p>\n                <p>\n                    Status: {medicineOrder.orderStatus}\n                </p>\n\n                { medicineOrder.medicineOrderItems.map(orderitem => (\n                    <span key={orderitem.id}>\n                        <p>\n                            {orderitem.medicine.name} {orderitem.medicine.price} x {orderitem.amount}\n                        </p>\n                        <button onClick={() => this.handleDelete(orderitem)} className=\"btn btn-danger\"> Delete </button>\n                    </span>\n\n                ))}\n                <span>\n                    <h6>Dodaj nowy element zamówienia</h6>\n                    <Button color=\"primary\" onClick={this.onMedicineSearchSubmit}>Search</Button>\n                    <Input\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.medicineSearchValue}\n                        onChange={this.onMedicineSearchChange}\n                        placeholder=\"Enter medicine name\"\n                    />\n\n                </span>\n                {this.state.modal ? (\n                    <UpdateOrderStatusModal\n                        activeItem={this.state.activeItem}\n                        choices={this.state.updateChoices}\n                        toggle={this.toggle}\n                        onStatusSave={this.handleStatusSubmit}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n\n    render () {\n        return (\n            <div>\n                { this.state.medicineOrder ?\n                    this.renderOrder()\n                    : null\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default MedicineOrder;"]},"metadata":{},"sourceType":"module"}