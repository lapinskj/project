{"ast":null,"code":"var _jsxFileName = \"/Users/justyna/Desktop/apkaTest/frontend/src/components/MedicineOrder/AddMedicineOrder.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nclass AddMedicineOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onCustomerSearchChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      const customerSearchValue = {\n        [name]: value\n      };\n      this.setState({\n        customerSearchValue\n      });\n    };\n\n    this.onCustomerChange = e => {\n      let customer = e.target.value;\n      this.setState({\n        activeCustomer: customer\n      });\n    };\n\n    this.onCustomerSearchSubmit = () => {\n      let customerSearchValue = this.state.customerSearchValue;\n\n      if (customerSearchValue) {\n        axios.get(`customers/?pesel=${customerSearchValue['pesel']}`, customerSearchValue).then(res => {\n          this.setState({\n            customersList: res.data\n          });\n          this.setState({\n            customer: res.data[0]\n          });\n          console.log(this.state.customer);\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.onMedicineSearchSubmit = e => {\n      let id = e.target.id.slice(6);\n      let medicineSearchValue = this.state.medicineSearchValues[id];\n      let medicineSearchObject = {\n        name: medicineSearchValue\n      };\n\n      if (medicineSearchObject) {\n        axios.get(`medicines/?name=${medicineSearchObject[\"name\"]}`, medicineSearchObject).then(res => {\n          let medicinesList = [...this.state.medicinesList];\n          medicinesList[id] = res.data;\n          this.setState({\n            medicinesList\n          });\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.renderCustomers = () => {\n      const customersList = this.state.customersList;\n      return customersList.map(customer => /*#__PURE__*/React.createElement(\"option\", {\n        value: customer.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, customer.id, \" \", customer.name, \" \", customer.surname, \" \", customer.pesel));\n    };\n\n    this.renderMedicines = id => {\n      const medicinesList = this.state.medicinesList[id];\n      console.log(this.state.medicinesList);\n\n      if (medicinesList) {\n        return medicinesList.map(medicineItem => /*#__PURE__*/React.createElement(\"option\", {\n          value: medicineItem.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }, medicineItem.id, \" \", medicineItem.name, \" \", medicineItem.price));\n      }\n\n      ;\n    };\n\n    this.addOrderItem = e => {\n      this.setState(prevState => ({\n        orderItems: [...prevState.orderItems, {\n          medicine: \"\",\n          amount: null\n        }]\n      }));\n    };\n\n    this.onMedicineOrderSubmit = e => {\n      let {\n        activeCustomer,\n        orderItems\n      } = this.state;\n      let newOrder = {\n        customer: activeCustomer,\n        medicineOrderItems: orderItems\n      };\n      console.log(newOrder);\n      axios.post(\"medicineOrders/\", newOrder).then(res => console.log(res)).catch(err => console.log(err));\n    };\n\n    this.onOrderItemChange = e => {\n      let orderItems = [...this.state.orderItems];\n      let item = { ...orderItems[e.target.dataset.id]\n      };\n      item[e.target.name] = e.target.value;\n      orderItems[e.target.dataset.id] = item;\n      this.setState({\n        orderItems\n      });\n    };\n\n    this.onMedicineSearchChange = e => {\n      let medicineSearchValues = [...this.state.medicineSearchValues];\n      let searchItemValue = e.target.value;\n      medicineSearchValues[e.target.dataset.id] = searchItemValue;\n      this.setState({\n        medicineSearchValues\n      });\n    };\n\n    this.state = {\n      customer: {\n        id: null,\n        name: \"\",\n        surname: \"\",\n        pesel: null,\n        age: null\n      },\n      medicineSearchValues: [],\n      orderItems: [{\n        medicine: \"\",\n        amount: null\n      }],\n      customerSearchValue: {},\n      activeCustomer: null,\n      customersList: [],\n      medicinesList: [[{}]]\n    };\n    this.onCustomerSearchChange = this.onCustomerSearchChange.bind(this);\n    this.onCustomerChange = this.onCustomerChange.bind(this);\n    this.onOrderItemChange = this.onOrderItemChange.bind(this);\n  }\n\n  render() {\n    let orderItems = this.state.orderItems;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"Dodaj nowe zam\\xF3wienie\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"pesel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, \"Search customer by pesel\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.onCustomerSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"pesel\",\n      value: this.state.customerSearchValue.pesel,\n      onChange: this.onCustomerSearchChange,\n      placeholder: \"Enter pesel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"customer\",\n      value: this.state.activeCustomer,\n      onChange: this.onCustomerChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, this.renderCustomers())), /*#__PURE__*/React.createElement(\"wbr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.addOrderItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 28\n      }\n    }, \"Add another medicine\")), /*#__PURE__*/React.createElement(\"abbr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, orderItems.map((val, idx) => {\n      let buttonId = `button${idx}`,\n          medicineSearchId = `medicineSearch${idx}`,\n          medicineId = `medicine${idx}`,\n          amountId = `amount${idx}`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"abbr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 45\n        }\n      }, `Order item #${idx + 1}`), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        id: buttonId,\n        onClick: this.onMedicineSearchSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 45\n        }\n      }, \"Search\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"medicineSearch\",\n        \"data-id\": idx,\n        id: medicineSearchId,\n        value: this.state.medicineSearchValues[idx],\n        onChange: this.onMedicineSearchChange,\n        placeholder: \"Enter medicine name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Label, {\n        for: medicineId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 45\n        }\n      }, \"Medicine\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        name: \"medicine\",\n        \"data-id\": idx,\n        id: medicineId,\n        value: orderItems[idx].medicine,\n        onChange: this.onOrderItemChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 45\n        }\n      }, this.renderMedicines(idx)), /*#__PURE__*/React.createElement(Label, {\n        for: amountId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 45\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"amount\",\n        \"data-id\": idx,\n        id: amountId,\n        value: orderItems[idx].amount,\n        onChange: this.onOrderItemChange,\n        placeholder: \"Enter medicine amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"abbr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 45\n        }\n      }));\n    })))), /*#__PURE__*/React.createElement(\"wbr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, \"Podsumowanie\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, \"Customer: \", this.state.activeCustomer ? this.state.activeCustomer : null), orderItems.map(item => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      }, \"Nazwa: \", item.medicine, \" Ilo\\u015B\\u0107: \", item.amount);\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onMedicineOrderSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default AddMedicineOrder;","map":{"version":3,"sources":["/Users/justyna/Desktop/apkaTest/frontend/src/components/MedicineOrder/AddMedicineOrder.js"],"names":["React","Component","axios","Button","Form","FormGroup","Input","Label","AddMedicineOrder","constructor","props","onCustomerSearchChange","e","name","value","target","customerSearchValue","setState","onCustomerChange","customer","activeCustomer","onCustomerSearchSubmit","state","get","then","res","customersList","data","console","log","catch","err","onMedicineSearchSubmit","id","slice","medicineSearchValue","medicineSearchValues","medicineSearchObject","medicinesList","renderCustomers","map","surname","pesel","renderMedicines","medicineItem","price","addOrderItem","prevState","orderItems","medicine","amount","onMedicineOrderSubmit","newOrder","medicineOrderItems","post","onOrderItemChange","item","dataset","onMedicineSearchChange","searchItemValue","age","bind","render","val","idx","buttonId","medicineSearchId","medicineId","amountId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Button, Form, FormGroup, Input, Label} from \"reactstrap\";\n\n\n\nclass AddMedicineOrder extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            customer: {\n                id: null,\n                name: \"\",\n                surname: \"\",\n                pesel: null,\n                age: null\n            },\n            medicineSearchValues: [],\n            orderItems: [{ medicine: \"\", amount: null}],\n            customerSearchValue: {},\n            activeCustomer: null,\n            customersList: [],\n            medicinesList: [[{}]]\n        };\n        this.onCustomerSearchChange = this.onCustomerSearchChange.bind(this);\n        this.onCustomerChange = this.onCustomerChange.bind(this);\n        this.onOrderItemChange = this.onOrderItemChange.bind(this);\n    };\n\n    onCustomerSearchChange = e => {\n        let { name, value } = e.target;\n        const customerSearchValue = { [name]: value };\n        this.setState({ customerSearchValue });\n    };\n\n\n    onCustomerChange = e => {\n        let customer = e.target.value;\n        this.setState({activeCustomer: customer});\n    };\n\n    onCustomerSearchSubmit = () => {\n        let customerSearchValue = this.state.customerSearchValue;\n        if (customerSearchValue) {\n            axios\n                .get(`customers/?pesel=${customerSearchValue['pesel']}`, customerSearchValue)\n                .then(res => {\n                    this.setState({ customersList: res.data });\n                    this.setState({customer: res.data[0]});\n                    console.log(this.state.customer)\n                })\n                .catch(err => console.log(err));\n        }\n    };\n\n    onMedicineSearchSubmit = (e) => {\n        let id = e.target.id.slice(6);\n        let medicineSearchValue = this.state.medicineSearchValues[id];\n        let medicineSearchObject = {name: medicineSearchValue}\n        if (medicineSearchObject) {\n            axios\n                .get(`medicines/?name=${medicineSearchObject[\"name\"]}`, medicineSearchObject)\n                .then(res => {\n                    let medicinesList = [...this.state.medicinesList];\n                    medicinesList[id] = res.data;\n                    this.setState({medicinesList});\n                })\n                .catch(err => console.log(err));\n        }\n    };\n\n\n    renderCustomers = () => {\n        const customersList = this.state.customersList;\n        return customersList.map(customer => (\n            <option value={customer.id}>\n                {customer.id} {customer.name} {customer.surname} {customer.pesel}\n            </option>\n        ));\n    };\n\n    renderMedicines = (id) => {\n        const medicinesList = this.state.medicinesList[id];\n        console.log(this.state.medicinesList);\n        if (medicinesList) {\n            return medicinesList.map(medicineItem => (\n                <option value={medicineItem.id}>\n                    {medicineItem.id} {medicineItem.name} {medicineItem.price}\n                </option>\n            ));\n        };\n    };\n\n    addOrderItem = (e) => {\n        this.setState((prevState) => ({\n            orderItems: [...prevState.orderItems, {medicine: \"\", amount: null}],\n        }));\n    };\n\n    onMedicineOrderSubmit = (e) => {\n        let {activeCustomer, orderItems} = this.state;\n        let newOrder = {customer: activeCustomer, medicineOrderItems: orderItems};\n        console.log(newOrder);\n        axios\n            .post(\"medicineOrders/\", newOrder)\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n    };\n\n    onOrderItemChange = (e) => {\n        let orderItems = [...this.state.orderItems];\n        let item = {...orderItems[e.target.dataset.id]};\n        item[e.target.name]= e.target.value;\n        orderItems[e.target.dataset.id] = item;\n        this.setState( {orderItems});\n    };\n\n    onMedicineSearchChange = (e) => {\n        let medicineSearchValues = [...this.state.medicineSearchValues];\n        let searchItemValue = e.target.value;\n        medicineSearchValues[e.target.dataset.id] = searchItemValue;\n        this.setState( {medicineSearchValues});\n    };\n\n    render () {\n        let orderItems = this.state.orderItems;\n        return (\n            <div>\n                <h3>\n                    Dodaj nowe zamówienie\n                </h3>\n                <span>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"pesel\">Search customer by pesel</Label>\n                            <Button color=\"primary\" onClick={this.onCustomerSearchSubmit}>Search</Button>\n                            <Input\n                                type=\"text\"\n                                name=\"pesel\"\n                                value={this.state.customerSearchValue.pesel}\n                                onChange={this.onCustomerSearchChange}\n                                placeholder=\"Enter pesel\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"customer\">Customer</Label>\n                            <Input\n                                type=\"select\"\n                                name=\"customer\"\n                                value={this.state.activeCustomer}\n                                onChange={this.onCustomerChange}\n                            >\n                                {this.renderCustomers()}\n                            </Input>\n                        </FormGroup>\n                        <wbr/>\n                        <div>\n                           <Button onClick={this.addOrderItem}>\n                                Add another medicine\n                            </Button>\n                        </div>\n                        <abbr/>\n                        <FormGroup>\n                            {\n                                orderItems.map( (val, idx) => {\n                                    let buttonId = `button${idx}`,medicineSearchId = `medicineSearch${idx}`, medicineId = `medicine${idx}`, amountId = `amount${idx}`;\n                                    return (\n                                        <div key={idx}>\n                                            <abbr/>\n                                            <Label>{`Order item #${idx + 1}`}</Label>\n                                            <Button color=\"primary\" id = {buttonId} onClick={this.onMedicineSearchSubmit}>Search</Button>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"medicineSearch\"\n                                                data-id={idx}\n                                                id={medicineSearchId}\n                                                value={this.state.medicineSearchValues[idx]}\n                                                onChange={this.onMedicineSearchChange}\n                                                placeholder=\"Enter medicine name\"\n                                            />\n                                            <br/>\n                                            <Label for={medicineId}>Medicine</Label>\n                                            <Input\n                                                type=\"select\"\n                                                name=\"medicine\"\n                                                data-id={idx}\n                                                id={medicineId}\n                                                value={orderItems[idx].medicine}\n                                                onChange={this.onOrderItemChange}\n                                            >\n                                                {this.renderMedicines(idx)}\n                                            </Input>\n                                            <Label for={amountId}>Amount</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"amount\"\n                                                data-id={idx}\n                                                id={amountId}\n                                                value={orderItems[idx].amount}\n                                                onChange={this.onOrderItemChange}\n                                                placeholder=\"Enter medicine amount\"\n                                            />\n                                            <abbr/>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </FormGroup>\n                    </Form>\n                </span>\n                <wbr/>\n                <span>\n                    <h4>\n                        Podsumowanie\n                    </h4>\n                    <p>\n                        Customer: {this.state.activeCustomer ? this.state.activeCustomer : null}\n                    </p>\n                    {orderItems.map((item) => {\n                        return(\n                            <p>Nazwa: {item.medicine} Ilość: {item.amount}</p>\n                        )\n                    })}\n                </span>\n                <Button onClick={this.onMedicineOrderSubmit}>\n                    Submit\n                </Button>\n            </div>\n        );\n    }\n\n}\n\nexport default AddMedicineOrder;"]},"metadata":{},"sourceType":"module"}